apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
        springCloudVersion = 'Finchley.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

group 'com.alpha.heroku.test'
version '1.0-SNAPSHOT'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = 1.8
repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
}

dependencies {

    //日志
    compile 'org.springframework.boot:spring-boot-starter-logging'
    //druid依赖
    compile 'org.slf4j:log4j-over-slf4j:1.7.25'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'tk.mybatis:mapper-spring-boot-starter:2.0.2'
    compile 'com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3'
    compile 'com.alibaba:druid-spring-boot-starter:1.1.10'

    // postgres
    compile 'org.postgresql:postgresql:9.4.1212'

    // 配置管理
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    //支持读取bootstrap.yml
    compile 'org.springframework.cloud:spring-cloud-context'

    compile 'com.google.guava:guava:20.0'
    compile 'org.projectlombok:lombok:1.18.2'

    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.6'

    //AutoMapper
    compile 'org.modelmapper:modelmapper:2.1.0'



    testCompile group: 'junit', name: 'junit', version: '4.12'
}


configurations {
    mybatisGenerator
}
dependencies {
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'org.postgresql:postgresql:9.4.1212'
    mybatisGenerator 'tk.mybatis:mapper:3.4.5'
}
task mybatisGenerate << {
    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: false,  configfile: 'src/main/resources/mybatis/config/generatorConfig.xml', verbose: true) {
    }
}
task stage() {
    dependsOn  assemble
}